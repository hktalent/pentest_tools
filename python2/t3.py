#-*- coding:utf-8 -*-

import socket
import urllib2
from multiprocessing.dummy import Pool as ThreadPool
import json
import urllib
import time
import optparse
import utils

# input --> a url
# return --> 1 exist or 0 not exist
def t3_enabled(url):
	try:
		(host,port) = utils.process_url(url)
		sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		server_address = (host, port)
		sock.settimeout(10)
		# print 'connecting to %s port %s' % server_address
		sock.connect(server_address)
		# Send headers
		headers = 't3 12.2.1\nAS:255\nHL:19\nMS:10000000\nPU:t3://us-l-breens:7001\n\n'
		# print 'sending Hello'
		sock.sendall(headers)
		data = sock.recv(1024)
		#print data
		#print >>sys.stderr, 'received "%s"' % data
		if not data.startswith('HELO'):
			msg = 't3_send exception: receive HELO fail!'
			print msg
			return 0
		else:
			print "T3 connection success"
			return 1
		sock.close()
	except Exception, e:
		msg = "t3_send exception:%s" % e
		print msg
		return 0


if __name__ == "__main__":

	parser = optparse.OptionParser()
	parser.add_option('-H', dest='tgtHost', type="string", help='specify target host')
	parser.add_option('-p', dest='tgtPort', type='int', help="specify target port")
	parser.add_option('-b', action="store_true", dest='batch', default=False, help="do a batch scan obtaining url list from remote server")
	(options, args) = parser.parse_args()
	tgtHost = options.tgtHost
	tgtPort = options.tgtPort
	batch = options.batch
	if batch and tgtHost == None and tgtPort == None:
		urllist = utils.get_url_list("http://192.168.17.89:8080/RDP/safeTeamUtil/safeTeamUtil!getAllUrls.do")
		if urllist: 
			pool = ThreadPool(8)
			results = pool.map(t3_enabled, urllist)
			pool.close()
			pool.join()
			json_data = utils.assembly_data("030104",dict(zip(urllist,results)))
			r = utils.post_data(json_data, "http://192.168.17.89:8080/RDP/safeTeamUtil/safeTeamUtil!recordVulnerability.do")
			print "Uploading data to remote server, please wait..."
			time.sleep(2)
			if r:
				print '[+]' , r
			else:
				print "[-]Uploading data failed"
	elif tgtHost and tgtPort and not batch:
		url = "http://" + tgtHost + ":" + str(tgtPort)
		t3_enabled(url)
	else:
		parser.print_help()
		exit(0)

	
	
	
	
	
	
	
	