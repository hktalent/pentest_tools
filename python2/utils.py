#-*- coding:utf-8 -*-
import urllib2
from urlparse import urlparse
import json
import urllib
import sys
import ssl

context = ssl._create_unverified_context()
# receive a api url and return a list of url otherwise False
def get_url_list(url):
	req = urllib2.Request(url, headers={"safeTeamPwd":""})
	try:
		raw_url_list = urllib2.urlopen(req,timeout=3,context=context).readlines()
                temp1 = map(str.strip, raw_url_list)
                return filter(lambda x: '.' in x, temp1)
	except urllib2.HTTPError, e:
		print e
		return False
	except urllib2.URLError, e:
		print e
		return False
	except:
		return False

def post_data(data, url):
	try:
		data = urllib.urlencode({"results": data})
		req = urllib2.Request(url, data=data, headers={"safeTeamPwd":"Ov0UdReLvCknifeadmin"})
		return urllib2.urlopen(req, context=context).read()
	except Exception,e:
		print e
		return False
		
def process_url(url):
	parsed_url = urlparse(url)
	if not parsed_url.port:
		return (parsed_url.hostname, 80)
	return (parsed_url.hostname, parsed_url.port)
	
# receive vul_id and result dict and return refined data structure
def assembly_data(id, kw):
	if isinstance(kw,dict):
		resultlist = []
		results_all = {"ID": id}
		results_all['Results'] = kw
		resultlist.append(results_all)
		return json.dumps(resultlist)
	return False
		
